<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<bean
		id="commonDataSourceTarget"
		class="org.openyu.commons.commons.dbcp.BasicDataSourceFactoryBean"
		parent="baseFactorySupporter">
		<property
			name="configLocation"
			value="file:src/test/config/etc/dbcp.properties" />
	</bean>

	<bean
		id="commonDataSource"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy"
		p:targetDataSource-ref="commonDataSourceTarget" />

	<bean
		id="commonSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		 <!-- hibernate 3 
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		-->
		<property
			name="dataSource"
			ref="commonDataSource" />
		<property
			name="configLocation"
			value="file:src/test/config/etc/hibernate.cfg.xml" />
		<property name="packagesToScan">
			<list>
				<value>org.openyu.mix.account.po.impl</value>
				<value>org.openyu.mix.role.po.impl</value>
				<value>org.openyu.mix.chat.po.impl</value>
			</list>
		</property>
	</bean>

	<bean
		id="commonHibernateTemplate"
		class="org.springframework.orm.hibernate4.HibernateTemplate"
		p:sessionFactory-ref="commonSessionFactory" />

	<!--  
	<bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	-->

	<!-- Hibernate transaction manager -->
	<bean
		id="commonTx"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="commonSessionFactory">
	</bean>

	<!-- use @CommonTx insteadof commonTxAdvice
	<tx:advice
		id="commonTxAdvice"
		transaction-manager="commonTx">
		<tx:attributes>
			<tx:method
				name="find*"
				read-only="true" />
			<tx:method
				name="is*"
				read-only="true" />
			<tx:method
				name="search*"
				read-only="true" />

			<tx:method
				name="insert*"
				rollback-for="java.lang.Exception"
				propagation="REQUIRED"
				read-only="false" />
			<tx:method
				name="update*"
				rollback-for="java.lang.Exception"
				propagation="REQUIRED"
				read-only="false" />
			<tx:method
				name="delete*"
				rollback-for="java.lang.Exception"
				propagation="REQUIRED"
				read-only="false" />
			<tx:method
				name="save*"
				rollback-for="java.lang.Exception"
				propagation="REQUIRED"
				read-only="false" />
			<tx:method
				name="offer*"
				rollback-for="java.lang.Exception"
				propagation="REQUIRED"
				read-only="false" />
		</tx:attributes>
	</tx:advice>
	-->

	<tx:annotation-driven transaction-manager="commonTx" />

	<!-- dao supporter, use sessionFactory
	<bean
		id="commonDaoSupporter"
		class="org.openyu.commons.dao.supporter.CommonDaoSupporter"
		p:sessionFactory-ref="sessionFactory" />
	-->

	<bean
		id="commonDaoSupporter"
		class="org.openyu.commons.dao.supporter.CommonDaoSupporter"
		p:hibernateTemplate-ref="commonHibernateTemplate" />

	<bean
		id="appDaoSupporter"
		class="org.openyu.mix.app.dao.supporter.AppDaoSupporter"
		parent="commonDaoSupporter" />
		
	<!-- service supporter -->
	<bean
		id="commonServiceSupporter"
		parent="baseServiceSupporter"
		class="org.openyu.commons.service.supporter.CommonServiceSupporter" />

	<bean
		id="appServiceSupporter"
		class="org.openyu.mix.app.service.supporter.AppServiceSupporter"
		parent="commonServiceSupporter" />
		
	<!--  async service -->
	<bean
		id="asyncService"
		class="org.openyu.commons.service.impl.AsyncServiceImpl"
		parent="baseServiceSupporter"
		p:commonDao-ref="commonDaoSupporter" />
		
	<!--  async service advisor 
	<aop:config>
		<aop:pointcut
			id="asyncServiceTxPointcut"
			expression="bean(asyncService)" />
		<aop:advisor
			id="asyncServiceTxAdvisor"
			advice-ref="commonTxAdvice"
			pointcut-ref="asyncServiceTxPointcut" />
	</aop:config>
	-->

</beans>
